version: 2.1

workflows:
  build_and_test_and_notify:
    jobs:
      - buildapp
      - testapp1:
          requires:
            - buildapp
      - testapp2:
          requires:
            - buildapp
      - send_test_results:
          requires:
            - testapp1
            - testapp2

jobs:
  buildapp:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - checkout
      - run:
          name: "Create Environment file and generate app key"
          command: |
            mv .env.testing .env

      # Descargar y cachear dependencias
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: "Instalar dependencias"
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # Preparar la base de datos
      - run:
          name: "Generar la clave de la aplicación"
          command: php artisan key:generate

      - run:
          name: "Instalar SQLite"
          command: sudo apt-get install libsqlite3-dev

      - run:
          name: "Crear base de datos y ejecutar migraciones"
          command: |
            touch database/database.sqlite
            php artisan migrate --env=testing
            php artisan db:seed

      # Persistir el área de trabajo para los trabajos de prueba
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .  # Persistir todo el directorio

  testapp1:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: "Ejecutar pruebas (ExampleTest)"
          command: php artisan test --filter ExampleTest --log-junit test_results1.xml
      # Persistir los resultados de las pruebas
      - persist_to_workspace:
          root: ~/repo
          paths:
            - test_results1.xml

  testapp2:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: "Ejecutar pruebas (LoginTest)"
          command: php artisan test --filter LoginTest --log-junit test_results2.xml
      # Persistir los resultados de las pruebas
      - persist_to_workspace:
          root: ~/repo
          paths:
            - test_results2.xml

  send_test_results:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: "Instalar mailutils"
          command: sudo apt-get install -y mailutils
      
      - run:
          name: "Enviar resultados del testapp1 por correo"
          command: |
            echo "Resultados de ExampleTest adjuntos." | mail -s "Resultados de ExampleTest" -A test_results1.xml dennis.ocana@gmail.com

      - run:
          name: "Enviar resultados del testapp2 por correo"
          command: |
            echo "Resultados de LoginTest adjuntos." | mail -s "Resultados de LoginTest" -A test_results2.xml dennis.ocana@gmail.com


