version: 2.1
orbs:
  slack: circleci/slack@4.10.1

# Workflow 1: Build
workflows:
  build_workflow:
    jobs:
      - buildapp

# Workflow 2: Test
  test_and_notify_workflow:
    jobs:
      - testapp1
      - testapp2

# Workflow 3: Notify
#  notify_workflow:
#    jobs:
#      - send_test_results1
#      - send_test_results2

# Jobs

# Job 1: Build app
jobs:
  buildapp:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - checkout
      # Descargar y cachear dependencias
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-

      - run:
          name: "Instalar dependencias"
          command: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      - run:
          name: "Instalar SQLite"
          command: sudo apt-get install libsqlite3-dev

      - run:
          name: "Crear base de datos y ejecutar migraciones"
          command: |
            cp .env.testing .env
            touch database/database.sqlite
            php artisan migrate:fresh --env=testing
            php artisan db:seed --force

      - persist_to_workspace:
          root: ~/repo
          paths:
            - .  # Persistir todo el directorio

# Job 2: Test 1 (usa el workspace del build)
  testapp1:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: "Generar clave para testapp1"
          command: |
            cp .env.testing .env
            touch database/database.sqlite
            php artisan migrate:fresh --env=testing
            php artisan db:seed --force
            php artisan key:generate
      - run:
          name: "Ejecutar pruebas (ExampleTest)"
          command: php artisan test --filter ExampleTest --log-junit test_results1.xml
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "La aplicacion ServiciosTickeflow ha pasado la prueba 1 correctamente."
                    }
                  ]
                }
              ]
            }
          event: pass
          channel: ci-messages
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "La aplicacion ServiciosTickeflow ha fallado la prueba 1."
                    }
                  ]
                }
              ]
            }
          channel: ci-messages
          event: fail
          mentions: "@Dennis Ocaña"
      - persist_to_workspace:
          root: ~/repo
          paths:
            - test_results1.xml

# Job 3: Test 2 (también usa el workspace del build)
  testapp2:
    working_directory: ~/repo
    docker:
      - image: cimg/php:8.2.7
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run:
          name: "Generar clave para testapp2"
          command: |
            cp .env.testing .env
            touch database/database.sqlite
            php artisan migrate:fresh --env=testing
            php artisan db:seed --force
            php artisan key:generate
      - run:
          name: "Ejecutar pruebas (LoginTest)"
          command: php artisan test --filter LoginTest --log-junit test_results2.xml
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "La aplicacion ServiciosTickeflow ha pasado la prueba 2 correctamente."
                    }
                  ]
                }
              ]
            }
          event: pass
          channel: ci-messages
      - slack/notify:
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "plain_text",
                      "text": "La aplicacion ServiciosTickeflow ha fallado la prueba 2."
                    }
                  ]
                }
              ]
            }
          channel: ci-messages
          event: fail
          mentions: "@Dennis Ocaña"
      - persist_to_workspace:
          root: ~/repo
          paths:
            - test_results2.xml
            